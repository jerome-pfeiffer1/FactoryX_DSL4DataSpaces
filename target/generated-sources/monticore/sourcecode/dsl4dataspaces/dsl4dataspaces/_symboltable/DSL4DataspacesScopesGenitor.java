/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class DSL4DataspacesScopesGenitor  implements dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesVisitor2,dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesHandler {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Deque<dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope> scopeStack
  = new java.util.ArrayDeque<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser traverser
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope firstCreatedScope
  
;


    /* generated by template cd2java.Constructor*/
 public  DSL4DataspacesScopesGenitor()
 {
  this.scopeStack = new ArrayDeque<>();
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser getTraverser ()

 {
    /* generated by template methods.Get*/

return this.traverser;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setTraverser (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser traverser)

 {
    /* generated by template methods.Set*/

this.traverser = traverser;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope getFirstCreatedScope ()

 {
    /* generated by template methods.Get*/

return this.firstCreatedScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope createFromAST (dsl4dataspaces.dsl4dataspaces._ast.ASTDataSpaceConnectorConfiguration rootNode)

 {
    /* generated by template _symboltable.scopesgenitor.CreateFromAST*/

  Log.errorIfNull(rootNode, "0xA7004x55924 Error by creating of the DSL4DataspacesScopesGenitor symbol table: top ast node is null");
  IDSL4DataspacesArtifactScope artifactScope = dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.artifactScope();
  artifactScope.setPackageName("");
  artifactScope.setImportsList(new ArrayList<>());
  artifactScope.setAstNode(rootNode);
  putOnStack(artifactScope);
  initArtifactScopeHP1(artifactScope);
  rootNode.accept(getTraverser());
  initArtifactScopeHP2(artifactScope);
  scopeStack.remove(artifactScope);
  return artifactScope;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void putOnStack (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope)

 {
    /* generated by template _symboltable.scopesgenitor.PutOnStack*/
  Log.errorIfNull(scope);

if (scope.getEnclosingScope() == null && getCurrentScope().isPresent()) {
    scope.setEnclosingScope(getCurrentScope().get());
    getCurrentScope().get().addSubScope(scope);
} else if (scope.getEnclosingScope() != null && getCurrentScope().isPresent()) {
    if (scope.getEnclosingScope() != getCurrentScope().get()) {
      Log.warn("0xA1043 The enclosing scope is not the same as the current scope on the stack.");
    }
  }

  if (firstCreatedScope == null) {
    firstCreatedScope = scope;
  }

  scopeStack.addLast(scope);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  final  Optional<dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope> getCurrentScope ()

 {
    return Optional.ofNullable(scopeStack.peekLast());
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  final  Optional<dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope> removeCurrentScope ()

 {
    return Optional.ofNullable(scopeStack.pollLast());
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setScopeStack (Deque<? extends dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope> scopeStack)

 {
    this.scopeStack = Log.errorIfNull((Deque<dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope>)scopeStack);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope createScope (boolean shadowing)

 {
    /* generated by template _symboltable.scopesgenitor.CreateScope*/

  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope = dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.scope();
  scope.setShadowing(shadowing);
  return scope;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTDataSpaceConnectorConfiguration node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTIdentificationData node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTOPCUAUsage node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCUsage node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTRole node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTIdentityProviderConfig node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void visit (dsl4dataspaces.dsl4dataspaces._ast.ASTOAuthInfo node)

 {
    /* generated by template _symboltable.scopesgenitor.VisitNoSymbol*/
  if (getCurrentScope().isPresent()) {
    node.setEnclosingScope(getCurrentScope().get());
  }
  else {
    Log.error("Could not set enclosing scope of ASTNode \"" + node
              + "\", because no scope is set yet!");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void initScopeHP1 (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void initScopeHP2 (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void initArtifactScopeHP1 (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope scope)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void initArtifactScopeHP2 (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope scope)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addToScopeStack (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope)

 {
    scopeStack.addLast(scope);
}


}


