/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class DSL4DataspacesGlobalScope extends dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesScope  implements dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesGlobalScope {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.io.paths.MCPath symbolPath
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  String fileExt
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 public  de.monticore.symboltable.serialization.IDeSer deSer
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Map<String,de.monticore.symboltable.serialization.ISymbolDeSer> symbolDeSers
   = com.google.common.collect.Maps.newHashMap()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  DSL4DataspacesSymbols2Json symbols2Json
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Set<String> cache
  = new java.util.HashSet<>()
;


    /* generated by template cd2java.Constructor*/
 public  DSL4DataspacesGlobalScope(de.monticore.io.paths.MCPath symbolPath,String fileExt)
 {
  /* generated by template _symboltable.globalscope.ConstructorGlobalScope*/

  this.symbolPath = Log.errorIfNull(symbolPath);
  this.fileExt = Log.errorIfNull(fileExt);
  init();

}

    /* generated by template cd2java.Constructor*/
 public  DSL4DataspacesGlobalScope()
 {
  /* generated by template _symboltable.globalscope.ZeroArgsConstructorGlobalScope*/

  this.symbolPath = new de.monticore.io.paths.MCPath();
  this.fileExt = ".*sym";
  init();

}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.io.paths.MCPath getSymbolPath ()

 {
    /* generated by template methods.Get*/

return this.symbolPath;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setSymbolPath (de.monticore.io.paths.MCPath symbolPath)

 {
    /* generated by template methods.Set*/

this.symbolPath = symbolPath;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String getFileExt ()

 {
    /* generated by template methods.Get*/

return this.fileExt;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setFileExt (String fileExt)

 {
    /* generated by template methods.Set*/

this.fileExt = fileExt;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.symboltable.serialization.IDeSer getDeSer ()

 {
    /* generated by template methods.Get*/

return this.deSer;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setDeSer (de.monticore.symboltable.serialization.IDeSer deSer)

 {
    /* generated by template methods.Set*/

this.deSer = deSer;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Map<String,de.monticore.symboltable.serialization.ISymbolDeSer> getSymbolDeSers ()

 {
    /* generated by template methods.Get*/

return this.symbolDeSers;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setSymbolDeSers (Map<String,de.monticore.symboltable.serialization.ISymbolDeSer> symbolDeSers)

 {
    /* generated by template methods.Set*/

this.symbolDeSers = symbolDeSers;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setSymbols2Json (DSL4DataspacesSymbols2Json symbols2Json)

 {
    /* generated by template methods.Set*/

this.symbols2Json = symbols2Json;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  DSL4DataspacesSymbols2Json getSymbols2Json ()

 {
    /* generated by template _symboltable.globalscope.GetSymbols2Json*/

  if(null == symbols2Json) {
    //initialize on demand to avoid cyclic constructor calls
    symbols2Json = new dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json();
  }
 return symbols2Json;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addLoadedFile (String name)

 {
    cache.add(name);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearLoadedFiles ()

 {
    cache.clear();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isFileLoaded (String name)

 {
    return cache.contains(name);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void init ()

 {
    /* generated by template _symboltable.globalscope.Init*/

  deSer = new dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesDeSer();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void loadFileForModelName (String modelName)

 {
    /* generated by template _symboltable.globalscope.LoadFileForModelName*/

  java.util.Optional<java.net.URL> location = getSymbolPath().find(modelName, getFileExt());
  if(location.isPresent() && !isFileLoaded(location.get().toString())){
    addLoadedFile(location.get().toString());
    IDSL4DataspacesArtifactScope as = getSymbols2Json().load(location.get());
    addSubScope(as);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  DSL4DataspacesGlobalScope getRealThis ()

 {
    return this;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clear ()

 {
    /* generated by template _symboltable.globalscope.Clear*/

  clearLoadedFiles();
  this.symbolPath = new de.monticore.io.paths.MCPath();
  this.subScopes.clear();
  this.symbolDeSers.clear();
  this.fileExt = ".*sym";
  init();

}


}


