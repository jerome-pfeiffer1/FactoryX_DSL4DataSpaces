/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._symboltable;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.symboltable.*;
import de.monticore.symboltable.serialization.*;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class DSL4DataspacesDeSer  implements de.monticore.symboltable.serialization.IDeSer<dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope, dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope, dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json> {

/* Hookpoint: ClassContent:Elements */



    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String serialize (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope toSerialize,dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json s2j)

 {
    /* generated by template _symboltable.serialization.scopeDeSer.SerializeS2J4ScopeDeSer*/

  de.monticore.symboltable.serialization.JsonPrinter printer = s2j.getJsonPrinter();
  printer.member(de.monticore.symboltable.serialization.JsonDeSers.IS_SHADOWING_SCOPE, toSerialize.isShadowing());
  return printer.toString();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String serialize (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope toSerialize,dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json s2j)

 {
    /* generated by template _symboltable.serialization.scopeDeSer.SerializeAS4ScopeDeSer*/

  de.monticore.symboltable.serialization.JsonPrinter printer = s2j.getJsonPrinter();
  printer.member("generated-using","www.MontiCore.de technology");
  if(toSerialize.isPresentName()) {
    printer.member(de.monticore.symboltable.serialization.JsonDeSers.NAME, toSerialize.getName());
  }
  if(!toSerialize.getPackageName().isEmpty()) {
    printer.member(de.monticore.symboltable.serialization.JsonDeSers.PACKAGE, toSerialize.getPackageName());
  }
  return printer.toString();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void serializeAddons (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope toSerialize,dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json s2j)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void serializeAddons (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope toSerialize,dsl4dataspaces.dsl4dataspaces._symboltable.DSL4DataspacesSymbols2Json s2j)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope deserializeScope (de.monticore.symboltable.serialization.json.JsonObject scopeJson)

 {
    /* generated by template _symboltable.serialization.scopeDeSer.DeserializeScope*/

  boolean isShadowingScope = scopeJson
      .getBooleanMemberOpt(de.monticore.symboltable.serialization.JsonDeSers.IS_SHADOWING_SCOPE)
      .orElse(false);
  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope = dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.scope();
  scope.setShadowing(isShadowingScope);
  scope.setExportingSymbols(true);


  deserializeAddons(scope,scopeJson);
  deserializeSymbols(scope, scopeJson);
  return scope;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope deserializeArtifactScope (de.monticore.symboltable.serialization.json.JsonObject scopeJson)

 {
    /* generated by template _symboltable.serialization.scopeDeSer.DeserializeArtifactScope*/

  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope scope = dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.artifactScope();
  scope.setPackageName(de.monticore.symboltable.serialization.JsonDeSers.getPackage(scopeJson));
  if (scopeJson.hasStringMember(de.monticore.symboltable.serialization.JsonDeSers.NAME)) {
    scope.setName(scopeJson.getStringMember(de.monticore.symboltable.serialization.JsonDeSers.NAME));
  }
  scope.setExportingSymbols(true);


  deserializeAddons(scope,scopeJson);
  deserializeSymbols(scope, scopeJson);
  return scope;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  void deserializeSymbols (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope,de.monticore.symboltable.serialization.json.JsonObject scopeJson)

 {
    /* generated by template _symboltable.serialization.scopeDeSer.DeserializeSymbols*/


  for (de.monticore.symboltable.serialization.json.JsonObject symbol :
      de.monticore.symboltable.serialization.JsonDeSers.getSymbols(scopeJson)) {
    Optional<String> kind = de.monticore.symboltable.serialization.JsonDeSers.getKindOpt(symbol);

    if (!kind.isPresent()) {
      Log.error("0xA1238 Serialized object does not have a kind attribute: '" + symbol + "'.");
      continue;
    }

    de.monticore.symboltable.serialization.ISymbolDeSer deSer = dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.globalScope().getSymbolDeSer(kind.get());

    if (null == deSer) {
      Log.debug(
        "0xA1234xx81662 No DeSer found to deserialize symbol of kind `" + kind
        + "`. Falling back to default for symbols of unknown kinds.",
        DSL4DataspacesDeSer.class.getName()
      );

      deSer = new SymbolWithScopeOfUnknownKindDeSer(this, dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill::scope);
      SymbolWithScopeOfUnknownKind s0 = (SymbolWithScopeOfUnknownKind) deSer.deserialize(symbol);
      scope.add(s0);
      scope.addSubScope((dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) s0.getSpannedScope());
    }
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void deserializeAddons (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope scope,de.monticore.symboltable.serialization.json.JsonObject scopeJson)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void deserializeAddons (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesArtifactScope scope,de.monticore.symboltable.serialization.json.JsonObject scopeJson)

 {
    /* generated by template cd2java.EmptyBody*/
// empty body

}


}


