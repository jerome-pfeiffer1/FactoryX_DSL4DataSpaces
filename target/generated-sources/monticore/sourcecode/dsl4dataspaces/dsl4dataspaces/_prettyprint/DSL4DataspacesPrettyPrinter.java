/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._prettyprint;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class DSL4DataspacesPrettyPrinter  implements dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesHandler,dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesVisitor2 {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.prettyprint.IndentPrinter printer
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean printComments
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser traverser
  
;


    /* generated by template cd2java.Constructor*/
 public  DSL4DataspacesPrettyPrinter(de.monticore.prettyprint.IndentPrinter printer,boolean printComments)
 {
  this.printer=printer; this.printComments=printComments;
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTDataSpaceConnectorConfiguration node)

 {
    /* generated by template _prettyprinter.pp.HandleMethod*/

if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPreComments(node, getPrinter());
}

    /* generated by template _prettyprinter.pp.Block*/

             
                if ( !node.getConfigurationElementsList().isEmpty() )
            { // opt: 1 req: 2
            /* generated by template _prettyprinter.pp.Alt*/


      
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("connector config ");

          
                getPrinter().print(/* generated by template _prettyprinter.pp.Tokens*/

node.getName()   + " ");
          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().println("{ ");
    getPrinter().indent();

          
                node.getConfigurationElementsList().forEach(n->n.accept(getTraverser()));
          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().unindent();
    getPrinter().println();
    getPrinter().println("} ");

    
            }
            


if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPostComments(node, getPrinter());
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName node)

 {
    /* generated by template _prettyprinter.pp.HandleMethod*/

if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPreComments(node, getPrinter());
}
    java.util.Iterator<String> iter_name = node.getNameList().iterator();

    /* generated by template _prettyprinter.pp.Block*/

             
                if ( iter_name.hasNext() )
            { // opt: 1 req: 1
            /* generated by template _prettyprinter.pp.Alt*/


      
                        getPrinter().print(/* generated by template _prettyprinter.pp.Tokens*/

iter_name.next()   + " ");
          
        /* generated by template _prettyprinter.pp.Block*/

    while  ( iter_name.hasNext() )
    { // While single alt
    /* generated by template _prettyprinter.pp.Alt*/


      
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().print("-");

          
                        getPrinter().print(/* generated by template _prettyprinter.pp.Tokens*/

iter_name.next()   + " ");
    
    }


    
            }
            


if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPostComments(node, getPrinter());
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTDiscoveryData node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@3700f4b6, de.monticore.codegen.prettyprint.data.PPGuardComponent@4d4b005d, de.monticore.codegen.prettyprint.data.PPGuardComponent@23f66fff, de.monticore.codegen.prettyprint.data.PPGuardComponent@1ff7eea4], required=0, optional=1, isListReady=false, #expressionList=3}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * DiscoveryData implements ConfigurationElements =
  "discovery" "{" ("linkedAssetID" assetID:ComplexName ";"| "baseUrl" baseUrl:StringLiteral ";"| "endpoint" endpoint:StringLiteral ";"| "idType" idType:["URI"] ";"| AssetMetaData)* "}";


*/
Log.error("0xA1067x31507 Contains a list of Alts where one is not iterator ready (leading to endless while loops)!");
throw new IllegalStateException("Contains a list of Alts where one is not iterator ready (leading to endless while loops)!");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@3555104b, de.monticore.codegen.prettyprint.data.PPGuardComponent@10904e9c, de.monticore.codegen.prettyprint.data.PPGuardComponent@6cfa3803, de.monticore.codegen.prettyprint.data.PPGuardComponent@41ffccc5], required=0, optional=2, isListReady=false, #expressionList=3}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * AssetMetaData =
  "asset" "{" ("title" title:ComplexName+ ";"| "description" description:StringLiteral ";"| "publisher" publisher:Name+ ";"| "sidiCodes" "[" (StringLiteral ("," StringLiteral)*)? "]" ";"| "version" version:StringLiteral ";"| "created" created:StringLiteral ";"| "modified" modified:StringLiteral ";"| "language" language:[de:"de" | en:"en" | nl:"nl"] ";")* "}";


*/
Log.error("0xA1067x14361 The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage node)

 {
    /* generated by template _prettyprinter.pp.HandleMethod*/

if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPreComments(node, getPrinter());
}

    /* generated by template _prettyprinter.pp.Block*/

    // Simplified always true
    /* generated by template _prettyprinter.pp.Alt*/


      
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("dataAddress ");

          
                node.getDataAddress().accept(getTraverser());
          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().println(";");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("dataSchemaAddress ");

          
                node.getSchemaAddress().accept(getTraverser());
          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().println(";");

    
    // Ignoring 0 other alt(s) (with less NonTerminals)



if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPostComments(node, getPrinter());
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTOPCUAUsage node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@5c354bf9, de.monticore.codegen.prettyprint.data.PPGuardComponent@4e431a4d, de.monticore.codegen.prettyprint.data.PPGuardComponent@73c409a6, de.monticore.codegen.prettyprint.data.PPGuardComponent@4c626aff, de.monticore.codegen.prettyprint.data.PPGuardComponent@3a7e9a09], required=0, optional=2, isListReady=false, #expressionList=4}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * OPCUAUsage implements Usage =
  "opcua" "usage" "{" (BaseUsage| "supportedProtocols" "[" (StringLiteral ("," StringLiteral)*)? "]" ";"| ("qosMetrics" "[" StringLiteral ("," StringLiteral)*)? "]" ";"| "securityPolicy" StringLiteral ";"| "securityMode" StringLiteral ";"| "authenticationMode" StringLiteral ";"| AccessPolicy)* "}";


*/
Log.error("0xA1067x34417 The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCUsage node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@6cb96e79, de.monticore.codegen.prettyprint.data.PPGuardComponent@3fe3c371, de.monticore.codegen.prettyprint.data.PPGuardComponent@600963e0, de.monticore.codegen.prettyprint.data.PPGuardComponent@2ee9033a, de.monticore.codegen.prettyprint.data.PPGuardComponent@9047a38], required=0, optional=2, isListReady=false, #expressionList=4}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * EDCUsage implements Usage =
  "edc" "usage" "{" (BaseUsage| "remoteAddress" StringLiteral ";"| "remoteID" (Name (":" Name)*) ";"| "xAPIKey" StringLiteral ";"| "stsServiceAddress" StringLiteral ";"| "registries" "{" (StringLiteral ("," StringLiteral)*)? "}" ";"| EDCPushEndpointsConfig| AccessPolicy)* "}";


*/
Log.error("0xA1067x63923 The NonTerminal(s) [StringLiteral, Name] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral, Name] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@28ddd822, de.monticore.codegen.prettyprint.data.PPGuardComponent@360b8ba, de.monticore.codegen.prettyprint.data.PPGuardComponent@65769b3f, de.monticore.codegen.prettyprint.data.PPGuardComponent@4f09e813, de.monticore.codegen.prettyprint.data.PPGuardComponent@9533518], required=0, optional=4, isListReady=false, #expressionList=4}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * EDCPushEndpointsConfig =
  "push" "endpoints" "{" ("cloudPush" "{" (ComplexName "=" StringLiteral ("," ComplexName "=" StringLiteral)*)? "}" ";"| "callBackAddress" StringLiteral ";")* "}";


*/
Log.error("0xA1067x42475 The NonTerminal(s) [StringLiteral, ComplexName] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral, ComplexName] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@ff0f9e0, de.monticore.codegen.prettyprint.data.PPGuardComponent@5e0e3442, de.monticore.codegen.prettyprint.data.PPGuardComponent@5e4706e0, de.monticore.codegen.prettyprint.data.PPGuardComponent@4e2c03c5, de.monticore.codegen.prettyprint.data.PPGuardComponent@469bdc19], required=0, optional=2, isListReady=false, #expressionList=4}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * AccessPolicy =
  "access" "policy" "{" ("usagePolicy" StringLiteral ";"| "contractOffer" "{" (Name "=" StringLiteral| ",")+ "}" ";"| "accessControl" "[" Role ("," Role)* "]" ";"| IdentityProviderConfig| OAuthInfo)* "}";


*/
Log.error("0xA1067x41510 The NonTerminal(s) [Role, StringLiteral] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [Role, StringLiteral] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTRole node)

 {
    /* generated by template _prettyprinter.pp.HandleMethod*/

if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPreComments(node, getPrinter());
}
    java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> iter_complexName = node.getComplexNameList().iterator();

    /* generated by template _prettyprinter.pp.Block*/

             
                if ( iter_complexName.hasNext() )
            { // opt: 2 req: 1
            /* generated by template _prettyprinter.pp.Alt*/


      
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("Role ");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().println("{ ");
    getPrinter().indent();

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("name ");

          
                        iter_complexName.next().accept(getTraverser());
          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().println(";");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().print("permissions ");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().print("[");

          
        /* generated by template _prettyprinter.pp.Block*/

             
                if ( iter_complexName.hasNext() )
            { // opt: 1 req: 1
            /* generated by template _prettyprinter.pp.Alt*/


      
                        iter_complexName.next().accept(getTraverser());
          
        /* generated by template _prettyprinter.pp.Block*/

    while  ( iter_complexName.hasNext() )
    { // While single alt
    /* generated by template _prettyprinter.pp.Alt*/


      
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().print(",");

          
                        iter_complexName.next().accept(getTraverser());
    
    }


    
            }
            

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().print("]");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().stripTrailing();
    getPrinter().println(";");

          
                    /* generated by template _prettyprinter.pp.Terminal*/

    getPrinter().unindent();
    getPrinter().println();
    getPrinter().println("} ");

    
            }
            


if (this.isPrintComments()) {
    de.monticore.prettyprint.CommentPrettyPrinter.printPostComments(node, getPrinter());
}

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTIdentityProviderConfig node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@69185cac, de.monticore.codegen.prettyprint.data.PPGuardComponent@f0e2769, de.monticore.codegen.prettyprint.data.PPGuardComponent@21923f66, de.monticore.codegen.prettyprint.data.PPGuardComponent@39714459, de.monticore.codegen.prettyprint.data.PPGuardComponent@122782e7, de.monticore.codegen.prettyprint.data.PPGuardComponent@6c6ccaa5], required=0, optional=1, isListReady=false, #expressionList=5}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * IdentityProviderConfig =
  "identity" "provider" "config" "{" ("idpEndpoint" StringLiteral ";"| "clientId" ComplexName ";"| "secret" StringLiteral ";"| "grantType" ComplexName ";")* "}";


*/
Log.error("0xA1067x62035 The NonTerminal(s) [StringLiteral, ComplexName] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral, ComplexName] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void handle (dsl4dataspaces.dsl4dataspaces._ast.ASTOAuthInfo node)

 {
    /* generated by template _prettyprinter.pp.HandleMethodError*/


// TODO: Implement me
/*
 * BlockData{altDataList=[AltData{componentList=[de.monticore.codegen.prettyprint.data.PPGuardComponent@5c35b141, de.monticore.codegen.prettyprint.data.PPGuardComponent@6fd57512, de.monticore.codegen.prettyprint.data.PPGuardComponent@414bf2b5, de.monticore.codegen.prettyprint.data.PPGuardComponent@4bf831db], required=0, optional=1, isListReady=false, #expressionList=3}], isClassProd=true, iteration=0, inheritedIteration=0}
 *
 * OAuthInfo implements ConfigurationElements =
  "oauth" "{" ("id" StringLiteral ";"| "secret" StringLiteral ";"| "grantType" StringLiteral ";"| "scope" StringLiteral ";")* "}";


*/
Log.error("0xA1067x26709 The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");
throw new IllegalStateException("The NonTerminal(s) [StringLiteral] caused the automatic generation to fail");

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.prettyprint.IndentPrinter getPrinter ()

 {
    return this.printer;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isPrintComments ()

 {
    return this.printComments;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setPrintComments (boolean printComments)

 {
    this.printComments = printComments;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser getTraverser ()

 {
    return this.traverser;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setTraverser (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser traverser)

 {
    this.traverser = traverser;
}


}


