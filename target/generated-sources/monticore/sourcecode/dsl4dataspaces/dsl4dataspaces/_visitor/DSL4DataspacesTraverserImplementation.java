/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._visitor;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;



/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class DSL4DataspacesTraverserImplementation  implements dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  DSL4DataspacesTraverserImplementation realThis
  = (DSL4DataspacesTraverserImplementation) this
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.visitor.IVisitor> iVisitorList
  = new ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsVisitor2> mCJavaLiteralsVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor2> mCBasicTypesVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2> mCCommonLiteralsVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2> mCLiteralsBasisVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<de.monticore.mcbasics._visitor.MCBasicsVisitor2> mCBasicsVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  List<dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesVisitor2> dSL4DataspacesVisitorList
  = new ArrayList<>();
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsHandler> mCJavaLiteralsHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.types.mcbasictypes._visitor.MCBasicTypesHandler> mCBasicTypesHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler> mCCommonLiteralsHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler> mCLiteralsBasisHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.mcbasics._visitor.MCBasicsHandler> mCBasicsHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesHandler> dSL4DataspacesHandler
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Set<Object> traversedElements
  = new HashSet<Object>()
;



    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4MCJavaLiterals (de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsVisitor2 mCJavaLiteralsVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.mCJavaLiteralsVisitorList.add(mCJavaLiteralsVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsVisitor2> getMCJavaLiteralsVisitorList ()

 {
    return mCJavaLiteralsVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4MCBasicTypes (de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor2 mCBasicTypesVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.mCBasicTypesVisitorList.add(mCBasicTypesVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.types.mcbasictypes._visitor.MCBasicTypesVisitor2> getMCBasicTypesVisitorList ()

 {
    return mCBasicTypesVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4MCCommonLiterals (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2 mCCommonLiteralsVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.mCCommonLiteralsVisitorList.add(mCCommonLiteralsVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsVisitor2> getMCCommonLiteralsVisitorList ()

 {
    return mCCommonLiteralsVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4MCLiteralsBasis (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2 mCLiteralsBasisVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.mCLiteralsBasisVisitorList.add(mCLiteralsBasisVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisVisitor2> getMCLiteralsBasisVisitorList ()

 {
    return mCLiteralsBasisVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4MCBasics (de.monticore.mcbasics._visitor.MCBasicsVisitor2 mCBasicsVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.mCBasicsVisitorList.add(mCBasicsVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.mcbasics._visitor.MCBasicsVisitor2> getMCBasicsVisitorList ()

 {
    return mCBasicsVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4DSL4Dataspaces (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesVisitor2 dSL4DataspacesVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.dSL4DataspacesVisitorList.add(dSL4DataspacesVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesVisitor2> getDSL4DataspacesVisitorList ()

 {
    return dSL4DataspacesVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setMCJavaLiteralsHandler (de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsHandler mCJavaLiteralsHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.mCJavaLiteralsHandler = Optional.ofNullable(mCJavaLiteralsHandler);
  if (this.mCJavaLiteralsHandler.isPresent()) {
    this.mCJavaLiteralsHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsHandler> getMCJavaLiteralsHandler ()

 {
    return mCJavaLiteralsHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setMCBasicTypesHandler (de.monticore.types.mcbasictypes._visitor.MCBasicTypesHandler mCBasicTypesHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.mCBasicTypesHandler = Optional.ofNullable(mCBasicTypesHandler);
  if (this.mCBasicTypesHandler.isPresent()) {
    this.mCBasicTypesHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<de.monticore.types.mcbasictypes._visitor.MCBasicTypesHandler> getMCBasicTypesHandler ()

 {
    return mCBasicTypesHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setMCCommonLiteralsHandler (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler mCCommonLiteralsHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.mCCommonLiteralsHandler = Optional.ofNullable(mCCommonLiteralsHandler);
  if (this.mCCommonLiteralsHandler.isPresent()) {
    this.mCCommonLiteralsHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsHandler> getMCCommonLiteralsHandler ()

 {
    return mCCommonLiteralsHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setMCLiteralsBasisHandler (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler mCLiteralsBasisHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.mCLiteralsBasisHandler = Optional.ofNullable(mCLiteralsBasisHandler);
  if (this.mCLiteralsBasisHandler.isPresent()) {
    this.mCLiteralsBasisHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisHandler> getMCLiteralsBasisHandler ()

 {
    return mCLiteralsBasisHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setMCBasicsHandler (de.monticore.mcbasics._visitor.MCBasicsHandler mCBasicsHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.mCBasicsHandler = Optional.ofNullable(mCBasicsHandler);
  if (this.mCBasicsHandler.isPresent()) {
    this.mCBasicsHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<de.monticore.mcbasics._visitor.MCBasicsHandler> getMCBasicsHandler ()

 {
    return mCBasicsHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setDSL4DataspacesHandler (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesHandler dSL4DataspacesHandler)

 {
    /* generated by template _visitor.traverser.SetHandler*/

  this.dSL4DataspacesHandler = Optional.ofNullable(dSL4DataspacesHandler);
  if (this.dSL4DataspacesHandler.isPresent()) {
    this.dSL4DataspacesHandler.get().setTraverser(this);
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Optional<dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesHandler> getDSL4DataspacesHandler ()

 {
    return dSL4DataspacesHandler;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void add4IVisitor (de.monticore.visitor.IVisitor iVisitor)

 {
    /* generated by template _visitor.traverser.AddVisitor*/

  this.iVisitorList.add(iVisitor);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.visitor.IVisitor> getIVisitorList ()

 {
    return iVisitorList;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Set<Object> getTraversedElements ()

 {
    return traversedElements;
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setTraversedElements (Set<Object> traversedElements)

 {
    this.traversedElements = traversedElements;
}


}


