/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTDiscoveryDataBuilder extends de.monticore.ast.ASTNodeBuilder<ASTDiscoveryDataBuilder>  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  ASTDiscoveryDataBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> assetID
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> baseUrl
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> endpoint
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> assetMetaDatas
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  boolean idType
  
;


    /* generated by template cd2java.Constructor*/
 public  ASTDiscoveryDataBuilder()
 {
  this.realBuilder = (ASTDiscoveryDataBuilder) this;
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryData build ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
          throw new IllegalStateException();
        }
        ASTDiscoveryData value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTDiscoveryData();
    value.setAssetIDList(this.assetID);
    value.setBaseUrlList(this.baseUrl);
    value.setEndpointList(this.endpoint);
    value.setAssetMetaDataList(this.assetMetaDatas);
    value.setIdType(this.idType);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAssetID (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllAssetID (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> iteratorAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] toArrayAssetID (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> spliteratorAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> streamAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> parallelStreamAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName getAssetID (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfAssetID (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfAssetID (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsAssetID (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorAssetID ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorAssetID (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> subListAssetID (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetIDList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> getAssetIDList ()

 {
    /* generated by template methods.Get*/

return this.assetID;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsBaseUrl (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllBaseUrl (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> iteratorBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] toArrayBaseUrl (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> spliteratorBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> streamBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> parallelStreamBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getBaseUrl (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfBaseUrl (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfBaseUrl (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsBaseUrl (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorBaseUrl ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorBaseUrl (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> subListBaseUrl (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUrlList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> getBaseUrlList ()

 {
    /* generated by template methods.Get*/

return this.baseUrl;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsEndpoint (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllEndpoint (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> iteratorEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] toArrayEndpoint (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> spliteratorEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> streamEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> parallelStreamEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getEndpoint (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfEndpoint (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfEndpoint (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsEndpoint (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorEndpoint ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorEndpoint (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> subListEndpoint (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEndpointList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> getEndpointList ()

 {
    /* generated by template methods.Get*/

return this.endpoint;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAssetMetaData (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllAssetMetaDatas (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> iteratorAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData[] toArrayAssetMetaDatas (dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> spliteratorAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> streamAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> parallelStreamAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData getAssetMetaData (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfAssetMetaData (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfAssetMetaData (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsAssetMetaDatas (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> listIteratorAssetMetaDatas ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> listIteratorAssetMetaDatas (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> subListAssetMetaDatas (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAssetMetaDataList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> getAssetMetaDataList ()

 {
    /* generated by template methods.Get*/

return this.assetMetaDatas;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isIdType ()

 {
    /* generated by template methods.Get*/

return this.idType;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clearAssetID ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAssetID (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllAssetID (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAssetID (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAllAssetID (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAllAssetID (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIfAssetID (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEachAssetID (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAssetID (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllAssetID (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAssetID (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setAssetID (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAllAssetID (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sortAssetID (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetIDList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setAssetIDList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> assetID)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.assetID = assetID;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clearBaseUrl ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addBaseUrl (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllBaseUrl (Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeBaseUrl (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAllBaseUrl (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAllBaseUrl (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIfBaseUrl (Predicate<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEachBaseUrl (Consumer<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addBaseUrl (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllBaseUrl (int index,Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeBaseUrl (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setBaseUrl (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAllBaseUrl (UnaryOperator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sortBaseUrl (Comparator<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getBaseUrlList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setBaseUrlList (List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> baseUrl)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.baseUrl = baseUrl;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clearEndpoint ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addEndpoint (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllEndpoint (Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeEndpoint (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAllEndpoint (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAllEndpoint (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIfEndpoint (Predicate<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEachEndpoint (Consumer<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addEndpoint (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllEndpoint (int index,Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeEndpoint (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setEndpoint (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAllEndpoint (UnaryOperator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sortEndpoint (Comparator<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getEndpointList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setEndpointList (List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> endpoint)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.endpoint = endpoint;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clearAssetMetaDatas ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAssetMetaData (dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllAssetMetaDatas (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAssetMetaData (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAllAssetMetaDatas (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAllAssetMetaDatas (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIfAssetMetaData (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEachAssetMetaDatas (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAssetMetaData (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAllAssetMetaDatas (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAssetMetaData (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setAssetMetaData (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAllAssetMetaDatas (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sortAssetMetaDatas (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getAssetMetaDataList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setAssetMetaDatasList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTAssetMetaData> assetMetaDatas)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.assetMetaDatas = assetMetaDatas;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder setIdType (boolean idType)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.idType = idType;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_SourcePositionEnd (SourcePosition end)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_SourcePositionEndAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_SourcePositionStart (SourcePosition start)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_SourcePositionStartAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clear_PreComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder add_PreComment (Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder add_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAll_PreComments (Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAll_PreComments (int index,Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder remove_PreComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder remove_PreComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIf_PreComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEach_PreComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sort_PreComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_PreCommentList (List<Comment> preComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder clear_PostComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder add_PostComment (Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder add_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAll_PostComments (Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder addAll_PostComments (int index,Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder remove_PostComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder remove_PostComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder retainAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder removeIf_PostComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder forEach_PostComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder sort_PostComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_PostCommentList (List<Comment> postComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryDataBuilder set_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTDiscoveryData uncheckedBuild ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        ASTDiscoveryData value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTDiscoveryData();
    value.setAssetIDList(this.assetID);
    value.setBaseUrlList(this.baseUrl);
    value.setEndpointList(this.endpoint);
    value.setAssetMetaDataList(this.assetMetaDatas);
    value.setIdType(this.idType);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}


}


