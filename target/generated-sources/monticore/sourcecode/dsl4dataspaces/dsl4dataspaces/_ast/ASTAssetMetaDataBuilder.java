/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTAssetMetaDataBuilder extends de.monticore.ast.ASTNodeBuilder<ASTAssetMetaDataBuilder>  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  ASTAssetMetaDataBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> title
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> description
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<String> publisher
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral created
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral modified
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  int language
  
;


    /* generated by template cd2java.Constructor*/
 public  ASTAssetMetaDataBuilder()
 {
  this.realBuilder = (ASTAssetMetaDataBuilder) this;
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaData build ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
            if (created == null) {
                Log.error("0xA4522 created of type de.monticore.literals.mccommonliterals._ast.ASTStringLiteral must not be null");
            }
            if (modified == null) {
                Log.error("0xA4522 modified of type de.monticore.literals.mccommonliterals._ast.ASTStringLiteral must not be null");
            }
          throw new IllegalStateException();
        }
        ASTAssetMetaData value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTAssetMetaData();
    value.setTitleList(this.title);
    if (this.description.isPresent()) {
      value.setDescription(this.description.get());
    } else {
      value.setDescriptionAbsent();
    }
    value.setPublisherList(this.publisher);
    value.setStringLiteralList(this.stringLiterals);
    value.setCreated(this.created);
    value.setModified(this.modified);
    value.setLanguage(this.language);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        if (created == null) {
            return false;
        }
        if (modified == null) {
            return false;
        }
        return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsTitle (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllTitle (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> iteratorTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] toArrayTitle (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> spliteratorTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> streamTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> parallelStreamTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName getTitle (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfTitle (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfTitle (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsTitle (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorTitle ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorTitle (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> subListTitle (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getTitleList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> getTitleList ()

 {
    /* generated by template methods.Get*/

return this.title;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getDescription ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentDescription()) {
        return this.description.get();
    }
    Log.error("0xA7003x84160 get for Description can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isPresentDescription ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.description.isPresent();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsPublisher (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllPublisher (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<String> iteratorPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizePublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String[] toArrayPublisher (String[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<String> spliteratorPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> streamPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> parallelStreamPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String getPublisher (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfPublisher (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfPublisher (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsPublisher (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodePublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorPublisher ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorPublisher (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> subListPublisher (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getPublisherList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> getPublisherList ()

 {
    /* generated by template methods.Get*/

return this.publisher;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllStringLiterals (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> iteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] toArrayStringLiterals (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> spliteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> streamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> parallelStreamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getStringLiteral (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsStringLiterals (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> subListStringLiterals (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> getStringLiteralList ()

 {
    /* generated by template methods.Get*/

return this.stringLiterals;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getCreated ()

 {
    /* generated by template methods.Get*/

return this.created;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getModified ()

 {
    /* generated by template methods.Get*/

return this.modified;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int getLanguage ()

 {
    /* generated by template methods.Get*/

return this.language;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder clearTitle ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addTitle (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllTitle (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeTitle (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeAllTitle (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder retainAllTitle (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeIfTitle (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder forEachTitle (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addTitle (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllTitle (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeTitle (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setTitle (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder replaceAllTitle (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder sortTitle (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getTitleList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setTitleList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> title)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.title = title;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setDescription (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral description)

 {
    /* generated by template _ast.builder.opt.Set4ASTBuilderOpt*/

    this.description = Optional.ofNullable(description);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setDescriptionAbsent ()

 {
    /* generated by template _ast.builder.opt.SetAbsent4ASTBuilderOpt*/

    this.description = Optional.empty();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder clearPublisher ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addPublisher (String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllPublisher (Collection<? extends String> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removePublisher (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeAllPublisher (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder retainAllPublisher (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeIfPublisher (Predicate<? super String> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder forEachPublisher (Consumer<? super String> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addPublisher (int index,String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllPublisher (int index,Collection<? extends String> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removePublisher (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setPublisher (int index,String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder replaceAllPublisher (UnaryOperator<String> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder sortPublisher (Comparator<? super String> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getPublisherList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setPublisherList (List<String> publisher)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.publisher = publisher;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder clearStringLiterals ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addStringLiteral (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllStringLiterals (Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeStringLiteral (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeAllStringLiterals (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder retainAllStringLiterals (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeIfStringLiteral (Predicate<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder forEachStringLiterals (Consumer<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAllStringLiterals (int index,Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeStringLiteral (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder replaceAllStringLiterals (UnaryOperator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder sortStringLiterals (Comparator<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setStringLiteralsList (List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.stringLiterals = stringLiterals;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setCreated (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral created)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.created = created;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setModified (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral modified)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.modified = modified;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder setLanguage (int language)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.language = language;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_SourcePositionEnd (SourcePosition end)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_SourcePositionEndAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_SourcePositionStart (SourcePosition start)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_SourcePositionStartAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder clear_PreComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder add_PreComment (Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder add_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAll_PreComments (Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAll_PreComments (int index,Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder remove_PreComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder remove_PreComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder retainAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeIf_PreComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder forEach_PreComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder sort_PreComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_PreCommentList (List<Comment> preComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder clear_PostComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder add_PostComment (Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder add_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAll_PostComments (Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder addAll_PostComments (int index,Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder remove_PostComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder remove_PostComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder retainAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder removeIf_PostComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder forEach_PostComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder sort_PostComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_PostCommentList (List<Comment> postComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaDataBuilder set_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAssetMetaData uncheckedBuild ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        ASTAssetMetaData value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTAssetMetaData();
    value.setTitleList(this.title);
    if (this.description.isPresent()) {
      value.setDescription(this.description.get());
    } else {
      value.setDescriptionAbsent();
    }
    value.setPublisherList(this.publisher);
    value.setStringLiteralList(this.stringLiterals);
    value.setCreated(this.created);
    value.setModified(this.modified);
    value.setLanguage(this.language);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}


}


