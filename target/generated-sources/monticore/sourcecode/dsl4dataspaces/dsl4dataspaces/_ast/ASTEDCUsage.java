/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTEDCUsage extends ASTCNode  implements dsl4dataspaces.dsl4dataspaces._ast.ASTUsage,dsl4dataspaces.dsl4dataspaces._ast.ASTDSL4DataspacesNode {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> baseUsages
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<String> names
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> eDCPushEndpointsConfigs
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> accessPolicys
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope enclosingScope
  
;


    /* generated by template cd2java.Constructor*/
 protected  ASTEDCUsage()
 {
  /* generated by template cd2java.EmptyBody*/
// empty body

}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEquals (Object o)

 {
         return deepEquals(o, true);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEquals (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithOrder*/

      ASTEDCUsage comp;
    if ((o instanceof ASTEDCUsage)) {
      comp = (ASTEDCUsage) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing baseUsages
    if (this.baseUsages.size() != comp.baseUsages.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it1 = this.baseUsages.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it2 = comp.baseUsages.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it1 = this.baseUsages.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it2 = comp.baseUsages.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing stringLiterals
    if (this.stringLiterals.size() != comp.stringLiterals.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it1 = this.stringLiterals.iterator();
        Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it2 = comp.stringLiterals.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it1 = this.stringLiterals.iterator();
        while (it1.hasNext()) {
          de.monticore.literals.mccommonliterals._ast.ASTStringLiteral oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it2 = comp.stringLiterals.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing eDCPushEndpointsConfigs
    if (this.eDCPushEndpointsConfigs.size() != comp.eDCPushEndpointsConfigs.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it1 = this.eDCPushEndpointsConfigs.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it2 = comp.eDCPushEndpointsConfigs.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it1 = this.eDCPushEndpointsConfigs.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it2 = comp.eDCPushEndpointsConfigs.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing accessPolicys
    if (this.accessPolicys.size() != comp.accessPolicys.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it1 = this.accessPolicys.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it2 = comp.accessPolicys.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it1 = this.accessPolicys.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it2 = comp.accessPolicys.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     


}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEqualsWithComments (Object o)

 {
         return deepEqualsWithComments(o, true);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithComments*/

      ASTEDCUsage comp;
    if ((o instanceof ASTEDCUsage)) {
      comp = (ASTEDCUsage) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing baseUsages
    if (this.baseUsages.size() != comp.baseUsages.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it1 = this.baseUsages.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it2 = comp.baseUsages.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it1 = this.baseUsages.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> it2 = comp.baseUsages.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing stringLiterals
    if (this.stringLiterals.size() != comp.stringLiterals.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it1 = this.stringLiterals.iterator();
        Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it2 = comp.stringLiterals.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it1 = this.stringLiterals.iterator();
        while (it1.hasNext()) {
          de.monticore.literals.mccommonliterals._ast.ASTStringLiteral oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> it2 = comp.stringLiterals.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing eDCPushEndpointsConfigs
    if (this.eDCPushEndpointsConfigs.size() != comp.eDCPushEndpointsConfigs.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it1 = this.eDCPushEndpointsConfigs.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it2 = comp.eDCPushEndpointsConfigs.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it1 = this.eDCPushEndpointsConfigs.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> it2 = comp.eDCPushEndpointsConfigs.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    // comparing accessPolicys
    if (this.accessPolicys.size() != comp.accessPolicys.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it1 = this.accessPolicys.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it2 = comp.accessPolicys.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it1 = this.accessPolicys.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> it2 = comp.accessPolicys.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalAttributes (Object o)

 {
    /* generated by template data.EqualAttributes*/

      ASTEDCUsage comp;
    if ((o instanceof ASTEDCUsage)) {
      comp = (ASTEDCUsage) o;
    } else {
      return false;
    }
	// comparing names 
    if ( (this.names == null && comp.names != null) 
      || (this.names != null && !this.names.equals(comp.names)) ) {
      return false;
    }
    return true;


}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsWithComments (Object o)

 {
    /* generated by template data.EqualsWithComments*/

      ASTEDCUsage comp;
    if ((o instanceof ASTEDCUsage)) {
      comp = (ASTEDCUsage) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTEDCUsage deepClone ()

 {
        return deepClone(_construct());
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTEDCUsage deepClone (ASTEDCUsage result)

 {
    /* generated by template data.DeepCloneWithParameters*/


  result.set_SourcePositionStart(get_SourcePositionStart().clone());
  result.set_SourcePositionEnd(get_SourcePositionEnd().clone());
  for (de.monticore.ast.Comment x : get_PreCommentList()) {
    result.get_PreCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }
  for (de.monticore.ast.Comment x : get_PostCommentList()) {
    result.get_PostCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }

      getBaseUsageList().forEach(s -> result.baseUsages.add(s.deepClone()));
      for ( int i = 0; i < this.getNameList().size() ; i++ ) {
        result.addName(getName(i));
      }
      getStringLiteralList().forEach(s -> result.stringLiterals.add(s.deepClone()));
      getEDCPushEndpointsConfigList().forEach(s -> result.eDCPushEndpointsConfigs.add(s.deepClone()));
      getAccessPolicyList().forEach(s -> result.accessPolicys.add(s.deepClone()));
    
    return result;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsBaseUsage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllBaseUsages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> iteratorBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage[] toArrayBaseUsages (dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> spliteratorBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> streamBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> parallelStreamBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage getBaseUsage (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfBaseUsage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfBaseUsage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsBaseUsages (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> listIteratorBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> listIteratorBaseUsages (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> subListBaseUsages (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> getBaseUsageList ()

 {
    /* generated by template methods.Get*/

return this.baseUsages;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<String> iteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String[] toArrayNames (String[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<String> spliteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> streamNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> parallelStreamNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String getName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsNames (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorNames (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> subListNames (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> getNameList ()

 {
    /* generated by template methods.Get*/

return this.names;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllStringLiterals (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> iteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] toArrayStringLiterals (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> spliteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> streamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> parallelStreamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getStringLiteral (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsStringLiterals (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> subListStringLiterals (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> getStringLiteralList ()

 {
    /* generated by template methods.Get*/

return this.stringLiterals;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsEDCPushEndpointsConfig (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllEDCPushEndpointsConfigs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> iteratorEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig[] toArrayEDCPushEndpointsConfigs (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> spliteratorEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> streamEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> parallelStreamEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig getEDCPushEndpointsConfig (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfEDCPushEndpointsConfig (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfEDCPushEndpointsConfig (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsEDCPushEndpointsConfigs (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> listIteratorEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> listIteratorEDCPushEndpointsConfigs (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> subListEDCPushEndpointsConfigs (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> getEDCPushEndpointsConfigList ()

 {
    /* generated by template methods.Get*/

return this.eDCPushEndpointsConfigs;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAccessPolicy (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllAccessPolicys (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> iteratorAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy[] toArrayAccessPolicys (dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> spliteratorAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> streamAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> parallelStreamAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy getAccessPolicy (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfAccessPolicy (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfAccessPolicy (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsAccessPolicys (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> listIteratorAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> listIteratorAccessPolicys (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> subListAccessPolicys (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> getAccessPolicyList ()

 {
    /* generated by template methods.Get*/

return this.accessPolicys;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearBaseUsages ()

 {
    /* generated by template methods.MethodDelegate*/

this.getBaseUsageList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addBaseUsage (dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllBaseUsages (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeBaseUsage (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllBaseUsages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllBaseUsages (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfBaseUsage (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachBaseUsages (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getBaseUsageList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addBaseUsage (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage element)

 {
    /* generated by template methods.MethodDelegate*/

this.getBaseUsageList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllBaseUsages (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage removeBaseUsage (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage setBaseUsage (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getBaseUsageList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllBaseUsages (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getBaseUsageList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortBaseUsages (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getBaseUsageList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setBaseUsageList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTBaseUsage> baseUsages)

 {
    /* generated by template methods.Set*/

this.baseUsages = baseUsages;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearNames ()

 {
    /* generated by template methods.MethodDelegate*/

this.getNameList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addName (String element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllNames (Collection<? extends String> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfName (Predicate<? super String> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachNames (Consumer<? super String> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getNameList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addName (int index,String element)

 {
    /* generated by template methods.MethodDelegate*/

this.getNameList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllNames (int index,Collection<? extends String> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String removeName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String setName (int index,String element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllNames (UnaryOperator<String> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getNameList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortNames (Comparator<? super String> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getNameList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setNameList (List<String> names)

 {
    /* generated by template methods.Set*/

this.names = names;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

this.getStringLiteralList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addStringLiteral (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllStringLiterals (Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllStringLiterals (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllStringLiterals (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfStringLiteral (Predicate<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachStringLiterals (Consumer<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getStringLiteralList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template methods.MethodDelegate*/

this.getStringLiteralList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllStringLiterals (int index,Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral removeStringLiteral (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral setStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllStringLiterals (UnaryOperator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getStringLiteralList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortStringLiterals (Comparator<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getStringLiteralList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setStringLiteralList (List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals)

 {
    /* generated by template methods.Set*/

this.stringLiterals = stringLiterals;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearEDCPushEndpointsConfigs ()

 {
    /* generated by template methods.MethodDelegate*/

this.getEDCPushEndpointsConfigList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addEDCPushEndpointsConfig (dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllEDCPushEndpointsConfigs (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeEDCPushEndpointsConfig (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllEDCPushEndpointsConfigs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllEDCPushEndpointsConfigs (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfEDCPushEndpointsConfig (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachEDCPushEndpointsConfigs (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getEDCPushEndpointsConfigList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addEDCPushEndpointsConfig (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig element)

 {
    /* generated by template methods.MethodDelegate*/

this.getEDCPushEndpointsConfigList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllEDCPushEndpointsConfigs (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig removeEDCPushEndpointsConfig (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig setEDCPushEndpointsConfig (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getEDCPushEndpointsConfigList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllEDCPushEndpointsConfigs (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getEDCPushEndpointsConfigList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortEDCPushEndpointsConfigs (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getEDCPushEndpointsConfigList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEDCPushEndpointsConfigList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTEDCPushEndpointsConfig> eDCPushEndpointsConfigs)

 {
    /* generated by template methods.Set*/

this.eDCPushEndpointsConfigs = eDCPushEndpointsConfigs;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearAccessPolicys ()

 {
    /* generated by template methods.MethodDelegate*/

this.getAccessPolicyList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAccessPolicy (dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllAccessPolicys (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAccessPolicy (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllAccessPolicys (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllAccessPolicys (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfAccessPolicy (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachAccessPolicys (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getAccessPolicyList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addAccessPolicy (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy element)

 {
    /* generated by template methods.MethodDelegate*/

this.getAccessPolicyList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllAccessPolicys (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy removeAccessPolicy (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy setAccessPolicy (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getAccessPolicyList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllAccessPolicys (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getAccessPolicyList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortAccessPolicys (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getAccessPolicyList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setAccessPolicyList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTAccessPolicy> accessPolicys)

 {
    /* generated by template methods.Set*/

this.accessPolicys = accessPolicys;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser visitor)

 {
    /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x23942 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.types.mcbasictypes._visitor.MCBasicTypesTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x75947 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.types.mcbasictypes._visitor.MCBasicTypesTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x09192 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x38956 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.mcbasics._visitor.MCBasicsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x55308 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.visitor.ITraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x07652 AST node type ASTEDCUsage expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.visitor.ITraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  ASTEDCUsage _construct ()

 {
    return dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.eDCUsageBuilder().uncheckedBuild();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope enclosingScope)

 {
    /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mcjavaliterals._symboltable.IMCJavaLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x82574 The EnclosingScope form type de.monticore.literals.mcjavaliterals._symboltable.IMCJavaLiteralsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x82574 The EnclosingScope form type de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x82574 The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x82574 The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x82574 The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}


}


