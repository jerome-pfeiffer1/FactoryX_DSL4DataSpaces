/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTAccessPolicyBuilder extends de.monticore.ast.ASTNodeBuilder<ASTAccessPolicyBuilder>  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  ASTAccessPolicyBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<String> names
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> roles
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<dsl4dataspaces.dsl4dataspaces._ast.ASTIdentityProviderConfig> identityProviderConfig
  = Optional.empty()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  Optional<dsl4dataspaces.dsl4dataspaces._ast.ASTOAuthInfo> oAuthInfo
  = Optional.empty()
;


    /* generated by template cd2java.Constructor*/
 public  ASTAccessPolicyBuilder()
 {
  this.realBuilder = (ASTAccessPolicyBuilder) this;
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicy build ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
          throw new IllegalStateException();
        }
        ASTAccessPolicy value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTAccessPolicy();
    value.setNameList(this.names);
    value.setStringLiteralList(this.stringLiterals);
    value.setRoleList(this.roles);
    if (this.identityProviderConfig.isPresent()) {
      value.setIdentityProviderConfig(this.identityProviderConfig.get());
    } else {
      value.setIdentityProviderConfigAbsent();
    }
    if (this.oAuthInfo.isPresent()) {
      value.setOAuthInfo(this.oAuthInfo.get());
    } else {
      value.setOAuthInfoAbsent();
    }
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<String> iteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String[] toArrayNames (String[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<String> spliteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> streamNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<String> parallelStreamNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  String getName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsNames (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<String> listIteratorNames (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> subListNames (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getNameList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<String> getNameList ()

 {
    /* generated by template methods.Get*/

return this.names;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllStringLiterals (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> iteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] toArrayStringLiterals (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> spliteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> streamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> parallelStreamStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  de.monticore.literals.mccommonliterals._ast.ASTStringLiteral getStringLiteral (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfStringLiteral (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsStringLiterals (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> listIteratorStringLiterals (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> subListStringLiterals (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getStringLiteralList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> getStringLiteralList ()

 {
    /* generated by template methods.Get*/

return this.stringLiterals;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsRole (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllRoles (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> iteratorRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTRole[] toArrayRoles (dsl4dataspaces.dsl4dataspaces._ast.ASTRole[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> spliteratorRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> streamRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> parallelStreamRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTRole getRole (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfRole (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfRole (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsRoles (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> listIteratorRoles ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> listIteratorRoles (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> subListRoles (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getRoleList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> getRoleList ()

 {
    /* generated by template methods.Get*/

return this.roles;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTIdentityProviderConfig getIdentityProviderConfig ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentIdentityProviderConfig()) {
        return this.identityProviderConfig.get();
    }
    Log.error("0xA7003x10980 get for IdentityProviderConfig can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isPresentIdentityProviderConfig ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.identityProviderConfig.isPresent();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTOAuthInfo getOAuthInfo ()

 {
    /* generated by template methods.opt.Get4Opt*/

    if (isPresentOAuthInfo()) {
        return this.oAuthInfo.get();
    }
    Log.error("0xA7003x03272 get for OAuthInfo can't return a value. Attribute is empty.");
    // Normally this statement is not reachable
    throw new IllegalStateException();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isPresentOAuthInfo ()

 {
    /* generated by template methods.opt.IsPresent4Opt*/

return this.oAuthInfo.isPresent();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder clearNames ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addName (String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllNames (Collection<? extends String> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeName (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeAllNames (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder retainAllNames (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeIfName (Predicate<? super String> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder forEachNames (Consumer<? super String> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addName (int index,String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllNames (int index,Collection<? extends String> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeName (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setName (int index,String element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder replaceAllNames (UnaryOperator<String> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder sortNames (Comparator<? super String> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getNameList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setNamesList (List<String> names)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.names = names;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder clearStringLiterals ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addStringLiteral (de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllStringLiterals (Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeStringLiteral (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeAllStringLiterals (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder retainAllStringLiterals (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeIfStringLiteral (Predicate<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder forEachStringLiterals (Consumer<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllStringLiterals (int index,Collection<? extends de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeStringLiteral (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setStringLiteral (int index,de.monticore.literals.mccommonliterals._ast.ASTStringLiteral element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder replaceAllStringLiterals (UnaryOperator<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder sortStringLiterals (Comparator<? super de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getStringLiteralList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setStringLiteralsList (List<de.monticore.literals.mccommonliterals._ast.ASTStringLiteral> stringLiterals)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.stringLiterals = stringLiterals;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder clearRoles ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addRole (dsl4dataspaces.dsl4dataspaces._ast.ASTRole element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllRoles (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTRole> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeRole (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeAllRoles (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder retainAllRoles (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeIfRole (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTRole> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder forEachRoles (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTRole> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addRole (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTRole element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAllRoles (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTRole> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeRole (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setRole (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTRole element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder replaceAllRoles (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder sortRoles (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTRole> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getRoleList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setRolesList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTRole> roles)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.roles = roles;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setIdentityProviderConfig (dsl4dataspaces.dsl4dataspaces._ast.ASTIdentityProviderConfig identityProviderConfig)

 {
    /* generated by template _ast.builder.opt.Set4ASTBuilderOpt*/

    this.identityProviderConfig = Optional.ofNullable(identityProviderConfig);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setIdentityProviderConfigAbsent ()

 {
    /* generated by template _ast.builder.opt.SetAbsent4ASTBuilderOpt*/

    this.identityProviderConfig = Optional.empty();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setOAuthInfo (dsl4dataspaces.dsl4dataspaces._ast.ASTOAuthInfo oAuthInfo)

 {
    /* generated by template _ast.builder.opt.Set4ASTBuilderOpt*/

    this.oAuthInfo = Optional.ofNullable(oAuthInfo);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder setOAuthInfoAbsent ()

 {
    /* generated by template _ast.builder.opt.SetAbsent4ASTBuilderOpt*/

    this.oAuthInfo = Optional.empty();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_SourcePositionEnd (SourcePosition end)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_SourcePositionEndAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_SourcePositionStart (SourcePosition start)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_SourcePositionStartAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder clear_PreComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder add_PreComment (Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder add_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAll_PreComments (Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAll_PreComments (int index,Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder remove_PreComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder remove_PreComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder retainAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeIf_PreComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder forEach_PreComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder sort_PreComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_PreCommentList (List<Comment> preComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder clear_PostComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder add_PostComment (Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder add_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAll_PostComments (Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder addAll_PostComments (int index,Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder remove_PostComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder remove_PostComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder retainAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder removeIf_PostComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder forEach_PostComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder sort_PostComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_PostCommentList (List<Comment> postComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicyBuilder set_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTAccessPolicy uncheckedBuild ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        ASTAccessPolicy value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTAccessPolicy();
    value.setNameList(this.names);
    value.setStringLiteralList(this.stringLiterals);
    value.setRoleList(this.roles);
    if (this.identityProviderConfig.isPresent()) {
      value.setIdentityProviderConfig(this.identityProviderConfig.get());
    } else {
      value.setIdentityProviderConfigAbsent();
    }
    if (this.oAuthInfo.isPresent()) {
      value.setOAuthInfo(this.oAuthInfo.get());
    } else {
      value.setOAuthInfoAbsent();
    }
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}


}


