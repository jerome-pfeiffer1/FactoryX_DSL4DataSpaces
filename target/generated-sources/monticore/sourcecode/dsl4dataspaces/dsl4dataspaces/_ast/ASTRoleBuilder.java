/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTRoleBuilder extends de.monticore.ast.ASTNodeBuilder<ASTRoleBuilder>  {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  ASTRoleBuilder realBuilder
  
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> complexNames
  = new java.util.ArrayList<>()
;


    /* generated by template cd2java.Constructor*/
 public  ASTRoleBuilder()
 {
  this.realBuilder = (ASTRoleBuilder) this;
}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRole build ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        if (!isValid()) {
          throw new IllegalStateException();
        }
        ASTRole value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTRole();
    value.setComplexNameList(this.complexNames);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isValid ()

 {
    /* generated by template _ast.builder.IsValidMethod*/

        return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllComplexNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> iteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] toArrayComplexNames (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> spliteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> streamComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> parallelStreamComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName getComplexName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsComplexNames (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorComplexNames (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> subListComplexNames (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> getComplexNameList ()

 {
    /* generated by template methods.Get*/

return this.complexNames;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder clearComplexNames ()

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().clear();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addComplexName (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().add(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAllComplexNames (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().addAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeComplexName (Object element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().remove(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeAllComplexNames (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().removeAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder retainAllComplexNames (Collection<?> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().retainAll(collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeIfComplexName (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> filter)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().removeIf(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder forEachComplexNames (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> action)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().forEach(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addComplexName (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().add(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAllComplexNames (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().addAll(index, collection);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeComplexName (int index)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().remove(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder setComplexName (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().set(index, element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder replaceAllComplexNames (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> operator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().replaceAll(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder sortComplexNames (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> comparator)

 {
    /* generated by template _ast.builder.MethodDelegate4ASTBuilder*/

    this.getComplexNameList().sort(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder setComplexNamesList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> complexNames)

 {
    /* generated by template _ast.builder.Set4ASTBuilder*/

    this.complexNames = complexNames;
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_SourcePositionEnd (SourcePosition end)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEnd(end);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_SourcePositionEndAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionEndAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_SourcePositionStart (SourcePosition start)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStart(start);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_SourcePositionStartAbsent ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_SourcePositionStartAbsent();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder clear_PreComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PreComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder add_PreComment (Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder add_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAll_PreComments (Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAll_PreComments (int index,Collection<Comment> precomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PreComments(index, precomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder remove_PreComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder remove_PreComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PreComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder retainAll_PreComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PreComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeIf_PreComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PreComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder forEach_PreComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PreComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder replaceAll_PreComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PreComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder sort_PreComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PreComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_PreCommentList (List<Comment> preComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreCommentList(preComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_PreComment (int index,Comment precomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PreComment(index, precomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder clear_PostComments ()

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.clear_PostComments();
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder add_PostComment (Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder add_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.add_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAll_PostComments (Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder addAll_PostComments (int index,Collection<Comment> postcomments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.addAll_PostComments(index, postcomments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder remove_PostComment (Object element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder remove_PostComment (int index)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.remove_PostComment(index);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder retainAll_PostComments (Collection<?> element)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.retainAll_PostComments(element);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder removeIf_PostComment (Predicate<? super Comment> filter)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.removeIf_PostComment(filter);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder forEach_PostComments (Consumer<? super Comment> action)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.forEach_PostComments(action);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder replaceAll_PostComments (UnaryOperator<Comment> operator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.replaceAll_PostComments(operator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder sort_PostComments (Comparator<? super Comment> comparator)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.sort_PostComments(comparator);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_PostCommentList (List<Comment> postComments)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostCommentList(postComments);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRoleBuilder set_PostComment (int index,Comment postcomment)

 {
    /* generated by template _ast.ast_class.builder.ASTCNodeMethodDelegate*/

    super.set_PostComment(index, postcomment);
    return this.realBuilder;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRole uncheckedBuild ()

 {
    /* generated by template _ast.builder.BuildMethod*/

        ASTRole value;
        /* generated by template _ast.ast_class.builder.ASTCNodeInit*/

    value = new ASTRole();
    value.setComplexNameList(this.complexNames);
    if (this.sourcePositionEnd.isPresent()) {
      value.set_SourcePositionEnd(this.sourcePositionEnd.get());
    } else {
      value.set_SourcePositionEndAbsent();
    }
    if (this.sourcePositionStart.isPresent()) {
      value.set_SourcePositionStart(this.sourcePositionStart.get());
    } else {
      value.set_SourcePositionStartAbsent();
    }
    value.set_PreCommentList(this.precomments);
    value.set_PostCommentList(this.postcomments);

        return value;

}


}


