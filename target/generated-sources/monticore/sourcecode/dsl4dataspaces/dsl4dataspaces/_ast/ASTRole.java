/* generated from model DSL4Dataspaces */
/* generated by template cd2java.Class*/

/* (c) https://github.com/MontiCore/monticore */

/* Hookpoint: ClassContent:addComment */

/* generated by template cd2java.Package*/
package dsl4dataspaces.dsl4dataspaces._ast;


/* generated by template cd2java.Imports*/

import java.util.*;
import java.util.function.*;
import java.util.stream.Stream;
import de.se_rwth.commons.logging.Log;
import de.se_rwth.commons.SourcePosition;

import de.monticore.ast.ASTCNode;
import de.monticore.ast.ASTNode;
import de.monticore.ast.Comment;


/* Hookpoint: ClassContent:Imports */



/* Hookpoint: ClassContent:Annotations */

 public  class ASTRole extends ASTCNode  implements dsl4dataspaces.dsl4dataspaces._ast.ASTDSL4DataspacesNode {

/* Hookpoint: ClassContent:Elements */

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  java.util.List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> complexNames
  = new java.util.ArrayList<>()
;

    /* generated by template cd2java.Attribute*/

/* Hookpoint: AttributeContent:Annotations */
 protected  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope enclosingScope
  
;


    /* generated by template cd2java.Constructor*/
 protected  ASTRole()
 {
  /* generated by template cd2java.EmptyBody*/
// empty body

}


    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEquals (Object o)

 {
         return deepEquals(o, true);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEquals (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithOrder*/

      ASTRole comp;
    if ((o instanceof ASTRole)) {
      comp = (ASTRole) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing complexNames
    if (this.complexNames.size() != comp.complexNames.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it1 = this.complexNames.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it2 = comp.complexNames.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEquals(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it1 = this.complexNames.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it2 = comp.complexNames.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEquals(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     


}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEqualsWithComments (Object o)

 {
         return deepEqualsWithComments(o, true);
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean deepEqualsWithComments (Object o,boolean forceSameOrder)

 {
    /* generated by template data.DeepEqualsWithComments*/

      ASTRole comp;
    if ((o instanceof ASTRole)) {
      comp = (ASTRole) o;
    } else {
      return false;
    }
    if (!equalsWithComments(comp)) {
      return false;
    }
    // comparing complexNames
    if (this.complexNames.size() != comp.complexNames.size()) {
      return false;
    } else {
      if (forceSameOrder) {
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it1 = this.complexNames.iterator();
        Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it2 = comp.complexNames.iterator();
        while (it1.hasNext() && it2.hasNext()) {
          if (!it1.next().deepEqualsWithComments(it2.next(), forceSameOrder)) {
            return false;
          }
        }
      } else {
        java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it1 = this.complexNames.iterator();
        while (it1.hasNext()) {
          dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName oneNext = it1.next();
          boolean matchFound = false;
          java.util.Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> it2 = comp.complexNames.iterator();
          while (it2.hasNext()) {
            if (oneNext.deepEqualsWithComments(it2.next(), forceSameOrder)) {
              matchFound = true;
              break;
            }
          }
          if (!matchFound) {
            return false;
          }
        }
      }
    }
    return true;     

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalAttributes (Object o)

 {
    /* generated by template data.EqualAttributes*/

    return o instanceof ASTRole;


}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsWithComments (Object o)

 {
    /* generated by template data.EqualsWithComments*/

      ASTRole comp;
    if ((o instanceof ASTRole)) {
      comp = (ASTRole) o;
    } else {
      return false;
    }
    if (!equalAttributes(comp)) {
      return false;
    }
    // comparing comments
    if (get_PreCommentList().size() == comp.get_PreCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PreCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PreCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    
    if (get_PostCommentList().size() == comp.get_PostCommentList().size()) {
      java.util.Iterator<de.monticore.ast.Comment> one = get_PostCommentList().iterator();
      java.util.Iterator<de.monticore.ast.Comment> two = comp.get_PostCommentList().iterator();
      while (one.hasNext()) {
        if (!one.next().equals(two.next())) {
          return false;
        }
      }
    } else {
      return false;
    }
    return true;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRole deepClone ()

 {
        return deepClone(_construct());
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ASTRole deepClone (ASTRole result)

 {
    /* generated by template data.DeepCloneWithParameters*/


  result.set_SourcePositionStart(get_SourcePositionStart().clone());
  result.set_SourcePositionEnd(get_SourcePositionEnd().clone());
  for (de.monticore.ast.Comment x : get_PreCommentList()) {
    result.get_PreCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }
  for (de.monticore.ast.Comment x : get_PostCommentList()) {
    result.get_PostCommentList().add(new de.monticore.ast.Comment(x.getText()));
  }

      getComplexNameList().forEach(s -> result.complexNames.add(s.deepClone()));
    
    return result;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().contains(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean containsAllComplexNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().containsAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean isEmptyComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().isEmpty();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Iterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> iteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().iterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int sizeComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().size();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] toArrayComplexNames (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName[] array)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().toArray(array);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Object[] toArrayComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().toArray();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Spliterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> spliteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().spliterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> streamComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().stream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  Stream<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> parallelStreamComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().parallelStream();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName getComplexName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().get(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int indexOfComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().indexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int lastIndexOfComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().lastIndexOf(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean equalsComplexNames (Object o)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().equals(o);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  int hashCodeComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().hashCode();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().listIterator();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  ListIterator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> listIteratorComplexNames (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().listIterator(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> subListComplexNames (int start,int end)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().subList(start, end);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> getComplexNameList ()

 {
    /* generated by template methods.Get*/

return this.complexNames;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void clearComplexNames ()

 {
    /* generated by template methods.MethodDelegate*/

this.getComplexNameList().clear();

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addComplexName (dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().add(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllComplexNames (Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().addAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeComplexName (Object element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().remove(element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeAllComplexNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().removeAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean retainAllComplexNames (Collection<?> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().retainAll(collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean removeIfComplexName (Predicate<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> filter)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().removeIf(filter);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void forEachComplexNames (Consumer<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> action)

 {
    /* generated by template methods.MethodDelegate*/

this.getComplexNameList().forEach(action);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void addComplexName (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template methods.MethodDelegate*/

this.getComplexNameList().add(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  boolean addAllComplexNames (int index,Collection<? extends dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> collection)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().addAll(index, collection);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName removeComplexName (int index)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().remove(index);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName setComplexName (int index,dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName element)

 {
    /* generated by template methods.MethodDelegate*/

return this.getComplexNameList().set(index, element);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void replaceAllComplexNames (UnaryOperator<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> operator)

 {
    /* generated by template methods.MethodDelegate*/

this.getComplexNameList().replaceAll(operator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void sortComplexNames (Comparator<? super dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> comparator)

 {
    /* generated by template methods.MethodDelegate*/

this.getComplexNameList().sort(comparator);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setComplexNameList (List<dsl4dataspaces.dsl4dataspaces._ast.ASTComplexName> complexNames)

 {
    /* generated by template methods.Set*/

this.complexNames = complexNames;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser visitor)

 {
    /* generated by template _ast.ast_class.Accept*/

      visitor.handle(this);

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x54049 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mcjavaliterals._visitor.MCJavaLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.types.mcbasictypes._visitor.MCBasicTypesTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x75420 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.types.mcbasictypes._visitor.MCBasicTypesTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x15953 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mccommonliterals._visitor.MCCommonLiteralsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.mcbasics._visitor.MCBasicsTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x66117 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.mcbasics._visitor.MCBasicsTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x01701 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.literals.mcliteralsbasis._visitor.MCLiteralsBasisTraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void accept (de.monticore.visitor.ITraverser visitor)

 {
    /* generated by template _ast.ast_class.AcceptSuper*/

  if (visitor instanceof dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) {
    accept((dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser) visitor);
  } else {
    de.se_rwth.commons.logging.Log.error("0xA7000x70603 AST node type ASTRole expected a visitor of type dsl4dataspaces.dsl4dataspaces._visitor.DSL4DataspacesTraverser, but got de.monticore.visitor.ITraverser. Visitors of a super language may not be used on ASTs containing nodes of the sub language. Use a visitor of the sub language.");
  }

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 protected  ASTRole _construct ()

 {
    return dsl4dataspaces.dsl4dataspaces.DSL4DataspacesMill.roleBuilder().uncheckedBuild();
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope getEnclosingScope ()

 {
    /* generated by template methods.Get*/

return this.enclosingScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope enclosingScope)

 {
    /* generated by template methods.Set*/

this.enclosingScope = enclosingScope;

}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mcjavaliterals._symboltable.IMCJavaLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x15495 The EnclosingScope form type de.monticore.literals.mcjavaliterals._symboltable.IMCJavaLiteralsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x15495 The EnclosingScope form type de.monticore.types.mcbasictypes._symboltable.IMCBasicTypesScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x15495 The EnclosingScope form type de.monticore.literals.mccommonliterals._symboltable.IMCCommonLiteralsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.mcbasics._symboltable.IMCBasicsScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x15495 The EnclosingScope form type de.monticore.mcbasics._symboltable.IMCBasicsScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}

    /* generated by template cd2java.Method*/

/* Hookpoint: MethodContent:Annotations */
 public  void setEnclosingScope (de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope enclosingScope)

 {
    /* generated by template _ast.ast_class.symboltable.InheritedSetEnclosingScope*/

  if (enclosingScope instanceof dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope){
    this.enclosingScope = (dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope) enclosingScope;
  }else {
    de.se_rwth.commons.logging.Log.error("0xA7005x15495 The EnclosingScope form type de.monticore.literals.mcliteralsbasis._symboltable.IMCLiteralsBasisScope could not be casted to the type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope. Please call the Method setEnclosingScope with a parameter form type dsl4dataspaces.dsl4dataspaces._symboltable.IDSL4DataspacesScope");
  }
}


}


