/* generated by template parser.ParserInfo*/

package dsl4dataspaces.dsl4dataspaces._parser;

import java.util.*;
import dsl4dataspaces.dsl4dataspaces._parser._auxiliary.DSL4DataspacesParserInfoForMCBasicTypes;
import dsl4dataspaces.dsl4dataspaces._parser._auxiliary.DSL4DataspacesParserInfoForMCJavaLiterals;
import dsl4dataspaces.dsl4dataspaces._parser._auxiliary.DSL4DataspacesParserInfoForMCBasics;
import dsl4dataspaces.dsl4dataspaces._parser._auxiliary.DSL4DataspacesParserInfoForMCCommonLiterals;
import dsl4dataspaces.dsl4dataspaces._parser._auxiliary.DSL4DataspacesParserInfoForMCLiteralsBasis;
import de.monticore.types.mcbasictypes._parser.MCBasicTypesParserInfo;
import de.monticore.literals.mcjavaliterals._parser.MCJavaLiteralsParserInfo;
import de.monticore.mcbasics._parser.MCBasicsParserInfo;
import de.monticore.literals.mccommonliterals._parser.MCCommonLiteralsParserInfo;
import de.monticore.literals.mcliteralsbasis._parser.MCLiteralsBasisParserInfo;

public class DSL4DataspacesParserInfo {
  // References

  // Usage names
  protected static Set<Integer> statesWithUsageNameSource = new HashSet<>(Arrays.asList( 100, 103, 216, 219, 222, 225 ));
  protected static Set<Integer> statesWithUsageNameDigits = new HashSet<>(Arrays.asList( 106, 113, 115, 120, 131, 139 ));
  protected static Set<Integer> statesWithUsageNamePre = new HashSet<>(Arrays.asList( 149, 164, 176, 190, 201, 208 ));
  protected static Set<Integer> statesWithUsageNamePost = new HashSet<>(Arrays.asList( 153, 168, 180, 194, 205, 212 ));
  protected static Set<Integer> statesWithUsageNameParts = new HashSet<>(Arrays.asList( 228, 232 ));
  protected static Set<Integer> statesWithUsageNameMCQualifiedName = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameMCVoidType = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameMCType = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameName = new HashSet<>(Arrays.asList( 286 ));
  protected static Set<Integer> statesWithUsageNameConfigurationElements = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameStringLiteral = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameEDCPushEndpointsConfig = Collections.emptySet();
  protected static Set<Integer> statesWithUsageNameRole = Collections.emptySet();

  // Named defining
  protected static Set<Integer> statesDefiningName = Collections.emptySet();
  protected static DSL4DataspacesParserInfo delegate;

  protected static DSL4DataspacesParserInfo getDelegate(){
      if(delegate == null){
        init();
      }
      return delegate;
  }


  public static void init(){
    delegate = new DSL4DataspacesParserInfo();
    MCBasicTypesParserInfo.initMe(new DSL4DataspacesParserInfoForMCBasicTypes());
    MCJavaLiteralsParserInfo.initMe(new DSL4DataspacesParserInfoForMCJavaLiterals());
    MCBasicsParserInfo.initMe(new DSL4DataspacesParserInfoForMCBasics());
    MCCommonLiteralsParserInfo.initMe(new DSL4DataspacesParserInfoForMCCommonLiterals());
    MCLiteralsBasisParserInfo.initMe(new DSL4DataspacesParserInfoForMCLiteralsBasis());
  }

  public static void initMe(DSL4DataspacesParserInfo _delegate){
    delegate = _delegate;
  }

  public static boolean stateHasUsageNameSource(int state){
    return getDelegate()._stateHasUsageNameSource(state);
  }

  protected boolean _stateHasUsageNameSource(int state){
    return statesWithUsageNameSource.contains(state);
  }

  public static boolean stateHasUsageNameDigits(int state){
    return getDelegate()._stateHasUsageNameDigits(state);
  }

  protected boolean _stateHasUsageNameDigits(int state){
    return statesWithUsageNameDigits.contains(state);
  }

  public static boolean stateHasUsageNamePre(int state){
    return getDelegate()._stateHasUsageNamePre(state);
  }

  protected boolean _stateHasUsageNamePre(int state){
    return statesWithUsageNamePre.contains(state);
  }

  public static boolean stateHasUsageNamePost(int state){
    return getDelegate()._stateHasUsageNamePost(state);
  }

  protected boolean _stateHasUsageNamePost(int state){
    return statesWithUsageNamePost.contains(state);
  }

  public static boolean stateHasUsageNameParts(int state){
    return getDelegate()._stateHasUsageNameParts(state);
  }

  protected boolean _stateHasUsageNameParts(int state){
    return statesWithUsageNameParts.contains(state);
  }

  public static boolean stateHasUsageNameMCQualifiedName(int state){
    return getDelegate()._stateHasUsageNameMCQualifiedName(state);
  }

  protected boolean _stateHasUsageNameMCQualifiedName(int state){
    return statesWithUsageNameMCQualifiedName.contains(state);
  }

  public static boolean stateHasUsageNameMCVoidType(int state){
    return getDelegate()._stateHasUsageNameMCVoidType(state);
  }

  protected boolean _stateHasUsageNameMCVoidType(int state){
    return statesWithUsageNameMCVoidType.contains(state);
  }

  public static boolean stateHasUsageNameMCType(int state){
    return getDelegate()._stateHasUsageNameMCType(state);
  }

  protected boolean _stateHasUsageNameMCType(int state){
    return statesWithUsageNameMCType.contains(state);
  }

  public static boolean stateHasUsageNameName(int state){
    return getDelegate()._stateHasUsageNameName(state);
  }

  protected boolean _stateHasUsageNameName(int state){
    return statesWithUsageNameName.contains(state);
  }

  public static boolean stateHasUsageNameConfigurationElements(int state){
    return getDelegate()._stateHasUsageNameConfigurationElements(state);
  }

  protected boolean _stateHasUsageNameConfigurationElements(int state){
    return statesWithUsageNameConfigurationElements.contains(state);
  }

  public static boolean stateHasUsageNameStringLiteral(int state){
    return getDelegate()._stateHasUsageNameStringLiteral(state);
  }

  protected boolean _stateHasUsageNameStringLiteral(int state){
    return statesWithUsageNameStringLiteral.contains(state);
  }

  public static boolean stateHasUsageNameEDCPushEndpointsConfig(int state){
    return getDelegate()._stateHasUsageNameEDCPushEndpointsConfig(state);
  }

  protected boolean _stateHasUsageNameEDCPushEndpointsConfig(int state){
    return statesWithUsageNameEDCPushEndpointsConfig.contains(state);
  }

  public static boolean stateHasUsageNameRole(int state){
    return getDelegate()._stateHasUsageNameRole(state);
  }

  protected boolean _stateHasUsageNameRole(int state){
    return statesWithUsageNameRole.contains(state);
  }

  public static boolean stateDefinesName(int state){
    return getDelegate()._stateDefinesName(state);
  }

  protected boolean _stateDefinesName(int state){
    return statesDefiningName.contains(state);
  }
}
